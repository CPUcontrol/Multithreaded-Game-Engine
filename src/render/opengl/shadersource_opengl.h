static const char *vertexshadersource_sprite    = "#version 330\nin vec2 vertex_position;in vec4 vertex_color;in vec4 sprite_glyph;out vec2 fragment_uv;out vec4 fragment_color;out vec4 fragment_glyph;layout (std140) uniform Transform{mat4 projection;};void main(){gl_Position = projection * vec4(vertex_position, 0.0, 1.0);fragment_uv = vec2(sprite_glyph[(gl_VertexID & 1)<<1],sprite_glyph[(gl_VertexID & 2)|1]);fragment_color = vertex_color;fragment_glyph = sprite_glyph;}";
static const char *fragmentshadersource_sprite  = "#version 330\nin vec2 fragment_uv;in vec4 fragment_color;in vec4 fragment_glyph;out vec4 color;uniform sampler2D sprite_texture;void main(){vec2 uvoffset = vec2(0.5) / textureSize(sprite_texture, 0);vec4 texel = texture(sprite_texture, clamp(fragment_uv, fragment_glyph.st+uvoffset, fragment_glyph.pq-uvoffset));color = texel * fragment_color;if (color.a == 0.0) discard;}";
static const char *vertexshadersource_color     = "#version 330\nin vec2 vertex_position;in vec4 vertex_color;out vec4 fragment_color;layout (std140) uniform Transform{mat4 projection;};void main(){gl_Position = projection * vec4(vertex_position, 0.0, 1.0);fragment_color = vertex_color;}";
static const char *fragmentshadersource_color   = "#version 330\nin vec4 fragment_color;out vec4 color;void main(){color = fragment_color;if (color.a == 0.0) discard;}";
